"""Modify to declarative mode sqlalchemy

Revision ID: 98710f217ba7
Revises: 80c007348819
Create Date: 2024-09-30 16:51:32.489626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '98710f217ba7'
down_revision: Union[str, None] = '80c007348819'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('band_kicks')
    op.drop_table('band_kibon_donjaks')
    op.drop_table('band_poomsaes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('band_poomsaes',
    sa.Column('band_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('poomsae_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], name='band_poomsaes_band_id_fkey'),
    sa.ForeignKeyConstraint(['poomsae_id'], ['poomsaes.id'], name='band_poomsaes_poomsae_id_fkey'),
    sa.PrimaryKeyConstraint('band_id', 'poomsae_id', 'id', name='band_poomsaes_pkey')
    )
    op.create_table('band_kibon_donjaks',
    sa.Column('band_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('kibon_donjak_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], name='band_kibon_donjaks_band_id_fkey'),
    sa.ForeignKeyConstraint(['kibon_donjak_id'], ['kibon_donjaks.id'], name='band_kibon_donjaks_kibon_donjak_id_fkey'),
    sa.PrimaryKeyConstraint('band_id', 'kibon_donjak_id', 'id', name='band_kibon_donjaks_pkey')
    )
    op.create_table('band_kicks',
    sa.Column('band_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('kick_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_for', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['band_id'], ['bands.id'], name='band_kicks_band_id_fkey'),
    sa.ForeignKeyConstraint(['kick_id'], ['kicks.id'], name='band_kicks_kick_id_fkey'),
    sa.PrimaryKeyConstraint('band_id', 'kick_id', 'id', name='band_kicks_pkey')
    )
    # ### end Alembic commands ###
